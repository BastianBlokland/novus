// -- Functions

fun intMin()
  0x8000_0000

fun intMax()
  0x7FFF_FFFF

fun longMin()
  0x8000_0000_0000_0000L

fun longMax()
  0x7FFF_FFFF_FFFF_FFFFL

fun floatMin()
  asFloat(0xFF7F_FFFF)

fun floatMax()
  asFloat(0x7F7F_FFFF)

fun nan()
  asFloat(0xFFA0_0000)

fun isNan(float v)
  v != v

fun epsilon()
  asFloat(0x1)

fun posInfinity()
  asFloat(0x7F80_0000)

fun negInfinity()
  asFloat(0xFF80_0000)

fun pi()
  3.14159274

fun negate{T}(T v)
  -v

fun abs{T}(T v)
  v < 0 ? -v : v

fun sign{T}(T v)
  v < 0 ? -1 : 1

fun isEven(int v)
  v % 2 == 0

fun min{T}(T a, T b)
  a < b ? a : b

fun max{T}(T a, T b)
  a > b ? a : b

fun clamp{T}(T v, T min, T max)
  if v < min  -> min
  if v > max  -> max
  else        -> v

fun trunc(float v)
  float(int(v))

fun floor(float v)
  t = trunc(v); t > v ? --t : t

fun ceil(float v)
  t = trunc(v); t < v ? ++t : t

fun round(float v)
  t = trunc(v);
  d = abs(v - t);
  if d < .5   -> t
  if d == .5  -> isEven(int(t)) ? t : t + sign(v)
  else        -> t + sign(v)

fun approx(float a, float b)
  abs(b - a) < max(.000001 * max(abs(a), abs(b)), epsilon() * 8)

fun lerp(float a, float b, float t)
  a + (b - a) * clamp(t, 0.0, 1.0)

fun invLerp(float a, float b, float v)
  a == b ? 0.0 : clamp((v - a) / (b - a), 0.0, 1.0)

fun degToRad(float deg)
  deg * 0.0174532924

fun radToDeg(float rad)
  rad * 57.29578

// -- Tests

assert(
  (1.0 / 0.0) == posInfinity() &&
  (-1.0 / 0.0) == negInfinity() &&
  -posInfinity() == negInfinity())

assert(
  nan().isNan() &&
  isNan(0.0 / 0.0) &&
  !isNan(0.0) &&
  !isNan(1.0) &&
  !isNan(1.0 / 0.0))

assert(
  negate(1) == -1 &&
  negate(-1) == 1 &&
  negate(42).negate() == 42 &&
  negate(1.0) == -1.0 &&
  negate(-1.0) == 1.0)

assert(
  abs(1) == 1 &&
  abs(-1) == 1 &&
  abs(-.42) == .42)

assert(
  sign(1) == 1 &&
  sign(-1) == -1 &&
  sign(-42) == -1 &&
  sign(42) == 1 &&
  sign(-.42) == -1 &&
  sign(.42) == 1)

assert(
  isEven(0) &&
  isEven(2) &&
  isEven(4) &&
  isEven(-2) &&
  isEven(-4) &&
  !isEven(1) &&
  !isEven(-1))

assert(
  min(1, 2) == 1 &&
  min(42, -42) == -42 &&
  min(.01, .001) == .001)

assert(
  max(1, 2) == 2 &&
  max(42, -42) == 42 &&
  max(.01, .001) == .01)

assert(
  clamp(3, 0, 5) == 3 &&
  clamp(3, 0, 2) == 2 &&
  clamp(-2, -3, 3) == -2 &&
  clamp(-1, -3, -2) == -2 &&
  clamp(.42, .2, .4) == .4 &&
  clamp(.38, .4, .5) == .4)

assert(
  trunc(1.42) == 1.0 &&
  trunc(42.1337) == 42.0 &&
  trunc(-1.42) == -1.0 &&
  trunc(-42.1337) == -42.0 &&
  trunc(-.34) == 0.0)

assert(
  floor(.1) == 0.0 &&
  floor(1.1) == 1.0 &&
  floor(1.99) == 1.0 &&
  floor(-42.1337) == -43.0 &&
  floor(-2.3) == -3.0 &&
  floor(-1.99) == -2.0)

assert(
  ceil(1.0) == 1.0 &&
  ceil(0.0) == 0.0 &&
  ceil(1.2) == 2.0 &&
  ceil(-1.0) == -1.0 &&
  ceil(-1.2) == -1.0 &&
  ceil(-42.1337) == -42.0 &&
  ceil(-1.99) == -1.0 &&
  ceil(-1.01) == -1.0)

assert(
  round(1.0) == 1.0 &&
  round(.0) == 0.0 &&
  round(.6) == 1.0 &&
  round(.5) == 0.0 &&
  round(.499) == 0.0 &&
  round(.51) == 1.0 &&
  round(1.4) == 1.0 &&
  round(1.5) == 2.0 &&
  round(1.6) == 2.0 &&
  round(2.5) == 2.0 &&
  round(2.6) == 3.0 &&
  round(3.5) == 4.0 &&
  round(-.1) == 0.0 &&
  round(-.4) == 0.0 &&
  round(-.5) == 0.0 &&
  round(-1.5) == -2.0 &&
  round(-1.6) == -2.0 &&
  round(-2.5) == -2.0 &&
  round(-2.6) == -3.0 &&
  round(-3.5) == -4.0)

assert(
  approx(1.0, 1.0) &&
  approx(0.0, 0.0) &&
  approx(0.0, epsilon()) &&
  approx(epsilon(), 0.0) &&
  approx(1.0, 10.0 / 10.0) &&
  approx(1.0, 1.000001) &&
  approx(1.000001, 1.0) &&
  approx(5000.0, 5000.001) &&
  approx(50000.0, 50000.01) &&
  approx(500000.0, 500000.1) &&
  approx(sqrt(42.1337 * 42.1337), 42.1337))

assert(
  lerp(1.0, 2.0, 0.0) == 1 &&
  lerp(1.0, 2.0, 1.0) == 2 &&
  approx(lerp(1.0, 2.0, .5), 1.5) &&
  lerp(-3.0, -1.0, 0.0) == -3.0 &&
  lerp(-3.0, -1.0, 1.0) == -1.0 &&
  lerp(-1.0, -3.0, 0.0) == -1.0 &&
  lerp(-1.0, -3.0, 1.0) == -3.0 &&
  lerp(0.0, 1.0, -1) == 0.0 &&
  lerp(0.0, 1.0, 2) == 1.0)

assert(
  invLerp(1.0, 2.0, 1.0) == 0.0 &&
  invLerp(1.0, 2.0, 2.0) == 1.0 &&
  approx(invLerp(1.0, 2.0, 1.5), 0.5) &&
  invLerp(1.0, 2.0, 0.0) == 0.0 &&
  invLerp(1.0, 2.0, 3.0) == 1.0 &&
  approx(invLerp(-1.0, -2.0, -1.5), 0.5) &&
  approx(invLerp(-1.0, -2.0, -1.0), 0.0) &&
  approx(invLerp(-1.0, -2.0, -2.0), 1.0))

assert(
  approx(degToRad(45), pi() / 4) &&
  approx(degToRad(90), pi() / 2) &&
  approx(degToRad(180), pi()) &&
  approx(degToRad(360), pi() * 2) &&
  approx(degToRad(720), pi() * 4) &&
  approx(degToRad(-720), pi() * -4))

assert(
  approx(radToDeg(pi() / 2), 90) &&
  approx(radToDeg(pi()), 180) &&
  approx(radToDeg(pi() * 2), 360))
