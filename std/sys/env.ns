import "std/core.ns"
import "std/prim.ns"

// -- Actions

act hasEnvVar(string name) -> bool
  intrinsic{env_variable_exists}(name)

act getEnvVar(string name) -> Option{string}
  if hasEnvVar(name)  -> string(intrinsic{env_variable}(name))
  else                -> None()

act getEnvArgs() -> List{string}
  invoke(
    impure lambda (int idx, List{string} result)
      if idx < 0  -> result
      else        -> self(--idx, intrinsic{env_argument}(idx) :: result)
    , --intrinsic{env_argument_count}(), List{string}())

act getEnvPath(string name) -> Either{PathAbsolute, Error}
  envVar = getEnvVar(name);
  if envVar is None            -> Error("Environment variable '" + name + "' not found")
  if envVar as string pathStr  -> pathAbsParser().run(pathStr) ! Error("Invalid path '" + pathStr + "' in environment variable: " + name + '\'')

act getHomePath() -> Either{PathAbsolute, Error}
  getEnvPath("USERPROFILE").orAct(lazy getEnvPath("HOME")).orAct(lazy getEnvPath("HOMEPATH"))
