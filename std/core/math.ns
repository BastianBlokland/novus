import "std/diag.ns"
import "std/prim.ns"

// -- Functions

fun pi()
  3.14159274

fun negate{T}(T v)
  -v

fun abs{T}(T v)
  v < 0 ? -v : v

fun sign{T}(T v)
  v < 0 ? -1 : 1

fun isEven{T}(T v)
  v % 2 == 0

fun min{T}(T a, T b)
  a < b ? a : b

fun max{T}(T a, T b)
  a > b ? a : b

fun clamp{T}(T v, T min, T max)
  if v < min  -> min
  if v > max  -> max
  else        -> v

fun trunc(float v)
  float(int(v))

fun floor(float v)
  t = trunc(v); t > v ? --t : t

fun ceil(float v)
  t = trunc(v); t < v ? ++t : t

fun round(float v)
  t = trunc(v);
  d = abs(v - t);
  if d < .5   -> t
  if d == .5  -> isEven(int(t)) ? t : t + sign(v)
  else        -> t + sign(v)

fun approx(float a, float b)
  abs(b - a) < max(.000001 * max(abs(a), abs(b)), epsilon() * 8)

fun lerp(float a, float b, float t)
  a + (b - a) * clamp(t, 0.0, 1.0)

fun invLerp(float a, float b, float v)
  a == b ? 0.0 : clamp((v - a) / (b - a), 0.0, 1.0)

fun degToRad(float deg)
  deg * 0.0174532924

fun radToDeg(float rad)
  rad * 57.29578

fun pow(float base, float exponent) -> float
  intrinsic{float_pow}(base, exponent)

fun sqrt(float x) -> float
  intrinsic{float_sqrt}(x)

fun sin(float x) -> float
  intrinsic{float_sin}(x)

fun cos(float x) -> float
  intrinsic{float_cos}(x)

fun tan(float x) -> float
  intrinsic{float_tan}(x)

fun asin(float x) -> float
  intrinsic{float_asin}(x)

fun acos(float x) -> float
  intrinsic{float_acos}(x)

fun atan(float x) -> float
  intrinsic{float_atan}(x)

fun atan2(float x, float y) -> float
  intrinsic{float_atan2}(x, y)

// -- Tests

assertEq(negate(1), -1)
assertEq(negate(-1), 1)
assertEq(negate(42).negate(), 42)
assertEq(negate(1.0), -1.0)
assertEq(negate(-1.0), 1.0)

assertEq(abs(1), 1)
assertEq(abs(-1), 1)
assertEq(abs(-.42), .42)

assertEq(sign(1), 1)
assertEq(sign(-1), -1)
assertEq(sign(-42), -1)
assertEq(sign(42), 1)
assertEq(sign(-.42), -1)
assertEq(sign(.42), 1)

assert(isEven(0))
assert(isEven(2))
assert(isEven(4))
assert(isEven(-2))
assert(isEven(-4))
assertNot(isEven(1))
assertNot(isEven(-1))

assert(isEven('b'))
assert(isEven(~1L))

assertEq(min(1, 2), 1)
assertEq(min(42, -42), -42)
assertEq(min(.01, .001), .001)

assertEq(max(1, 2), 2)
assertEq(max(42, -42), 42)
assertEq(max(.01, .001), .01)

assertEq(clamp(3, 0, 5), 3)
assertEq(clamp(3, 0, 2), 2)
assertEq(clamp(-2, -3, 3), -2)
assertEq(clamp(-1, -3, -2), -2)
assertEq(clamp(.42, .2, .4), .4)
assertEq(clamp(.38, .4, .5), .4)

assertEq(trunc(1.42), 1.0)
assertEq(trunc(42.1337), 42.0)
assertEq(trunc(-1.42), -1.0)
assertEq(trunc(-42.1337), -42.0)
assertEq(trunc(-.34), 0.0)

assertEq(floor(.1), 0.0)
assertEq(floor(1.1), 1.0)
assertEq(floor(1.99), 1.0)
assertEq(floor(-42.1337), -43.0)
assertEq(floor(-2.3), -3.0)
assertEq(floor(-1.99), -2.0)

assertEq(ceil(1.0), 1.0)
assertEq(ceil(0.0), 0.0)
assertEq(ceil(1.2), 2.0)
assertEq(ceil(-1.0), -1.0)
assertEq(ceil(-1.2), -1.0)
assertEq(ceil(-42.1337), -42.0)
assertEq(ceil(-1.99), -1.0)
assertEq(ceil(-1.01), -1.0)

assertEq(round(1.0), 1.0)
assertEq(round(.0), 0.0)
assertEq(round(.6), 1.0)
assertEq(round(.5), 0.0)
assertEq(round(.499), 0.0)
assertEq(round(.51), 1.0)
assertEq(round(1.4), 1.0)
assertEq(round(1.5), 2.0)
assertEq(round(1.6), 2.0)
assertEq(round(2.5), 2.0)
assertEq(round(2.6), 3.0)
assertEq(round(3.5), 4.0)
assertEq(round(-.1), 0.0)
assertEq(round(-.4), 0.0)
assertEq(round(-.5), 0.0)
assertEq(round(-1.5), -2.0)
assertEq(round(-1.6), -2.0)
assertEq(round(-2.5), -2.0)
assertEq(round(-2.6), -3.0)
assertEq(round(-3.5), -4.0)

assertApprox(1.0, 1.0)
assertApprox(0.0, 0.0)
assertApprox(0.0, epsilon())
assertApprox(epsilon(), 0.0)
assertApprox(1.0, 10.0 / 10.0)
assertApprox(1.0, 1.000001)
assertApprox(1.000001, 1.0)
assertApprox(5000.0, 5000.001)
assertApprox(50000.0, 50000.01)
assertApprox(500000.0, 500000.1)
assertApprox(sqrt(42.1337 * 42.1337), 42.1337)

assertEq(lerp(1.0, 2.0, 0.0), 1)
assertEq(lerp(1.0, 2.0, 1.0), 2)
assertApprox(lerp(1.0, 2.0, .5), 1.5)
assertEq(lerp(-3.0, -1.0, 0.0), -3.0)
assertEq(lerp(-3.0, -1.0, 1.0), -1.0)
assertEq(lerp(-1.0, -3.0, 0.0), -1.0)
assertEq(lerp(-1.0, -3.0, 1.0), -3.0)
assertEq(lerp(0.0, 1.0, -1), 0.0)
assertEq(lerp(0.0, 1.0, 2), 1.0)

assertEq(invLerp(1.0, 2.0, 1.0), 0.0)
assertEq(invLerp(1.0, 2.0, 2.0), 1.0)
assertApprox(invLerp(1.0, 2.0, 1.5), 0.5)
assertEq(invLerp(1.0, 2.0, 0.0), 0.0)
assertEq(invLerp(1.0, 2.0, 3.0), 1.0)
assertApprox(invLerp(-1.0, -2.0, -1.5), 0.5)
assertApprox(invLerp(-1.0, -2.0, -1.0), 0.0)
assertApprox(invLerp(-1.0, -2.0, -2.0), 1.0)

assertApprox(degToRad(45), pi() / 4)
assertApprox(degToRad(90), pi() / 2)
assertApprox(degToRad(180), pi())
assertApprox(degToRad(360), pi() * 2)
assertApprox(degToRad(720), pi() * 4)
assertApprox(degToRad(-720), pi() * -4)

assertApprox(radToDeg(pi() / 2), 90)
assertApprox(radToDeg(pi()), 180)
assertApprox(radToDeg(pi() * 2), 360)
