import "type.ns"

import "std/diag.ns"

// -- Traits

fun isIntegral(Type{int} t)   true
fun byteSize(Type{int} t)     4
fun minVal(Type{int} t)       0x8000_0000
fun maxVal(Type{int} t)       0x7FFF_FFFF

// -- Constructors

fun int() 0

fun int(int i) i

fun int(float f)
  intrinsic{float_to_int}(f)

fun int(long l)
  intrinsic{long_to_int}(l)

fun implicit int(char c)
  intrinsic{char_as_int}(c)

fun asInt(float f) -> int
  intrinsic{float_as_int}(f)

// -- Operators

fun +(int i) i

fun +(int x, int y) -> int
  intrinsic{int_add_int}(x, y)

fun ++(int i) i + 1

fun -(int x) -> int
  intrinsic{int_neg}(x)

fun -(int x, int y) -> int
  intrinsic{int_sub_int}(x, y)

fun --(int i) i - 1

fun ~(int x) -> int
  intrinsic{int_inv}(x)

fun *(int x, int y) -> int
  intrinsic{int_mul_int}(x, y)

fun /(int x, int y) -> int
  intrinsic{int_div_int}(x, y)

fun %(int x, int y) -> int
  intrinsic{int_rem_int}(x, y)

fun <<(int x, int y) -> int
  intrinsic{int_shiftleft}(x, y)

fun >>(int x, int y) -> int
  intrinsic{int_shiftright}(x, y)

fun &(int x, int y) -> int
  intrinsic{int_and_int}(x, y)

fun |(int x, int y) -> int
  intrinsic{int_or_int}(x, y)

fun ^(int x, int y) -> int
  intrinsic{int_xor_int}(x, y)

fun ==(int x, int y) -> bool
  intrinsic{int_eq_int}(x, y)

fun <(int x, int y) -> bool
  intrinsic{int_le_int}(x, y)

fun >(int x, int y) -> bool
  intrinsic{int_gt_int}(x, y)
