import "type.ns"

// -- Traits

fun isIntegral(Type{long} t)  true
fun byteSize(Type{long} t)    8
fun minVal(Type{long} t)      0x8000_0000_0000_0000L
fun maxVal(Type{long} t)      0x7FFF_FFFF_FFFF_FFFFL

// -- Constructors

fun long() 0L

fun long(long l) l

fun long(float f)
  intrinsic{float_to_long}(f)

fun implicit long(int i)
  intrinsic{int_to_long}(i)

fun implicit long(char c)
  intrinsic{int_to_long}(intrinsic{char_as_int}(c))

// -- Operators

fun +(long l) l

fun +(long x, long y) -> long
  intrinsic{long_add_long}(x, y)

fun ++(long l) l + 1L

fun -(long x) -> long
  intrinsic{long_neg}(x)

fun -(long x, long y) -> long
  intrinsic{long_sub_long}(x, y)

fun --(long l) l - 1L

fun ==(long x, long y) -> bool
  intrinsic{long_eq_long}(x, y)

fun <(long x, long y) -> bool
  intrinsic{long_le_long}(x, y)

fun >(long x, long y) -> bool
  intrinsic{long_gt_long}(x, y)
