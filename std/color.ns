import "std/math.ns"

// -- Types

struct Color  = float r, float g, float b

// -- Constructors

fun Color() black()

// -- Color presets

fun red()     Color(1.0, 0.0, 0.0)
fun green()   Color(0.0, 1.0, 0.0)
fun blue()    Color(0.0, 0.0, 1.0)
fun yellow()  Color(1.0, 1.0, 0.0)
fun white()   Color(1.0, 1.0, 1.0)
fun black()   Color(0.0, 0.0, 0.0)
fun gray()    Color(0.5, 0.5, 0.5)

// -- Operator

fun +(Color a, Color b) Color(a.r + b.r,  a.g + b.g,  a.b + b.b)
fun *(Color a, Color b) Color(a.r * b.r,  a.g * b.g,  a.b * b.b)
fun *(Color c, float t) Color(c.r * t,    c.g * t,    c.b * t)
fun /(Color c, float t) Color(c.r / t,    c.g / t,    c.b / t)

// -- Conversions

fun string(Color c)
  "(" + c.r.string() + ',' + c.g.string() + ',' + c.b.string() + ')'

// -- Functions

fun lerp(Color x, Color y, float t)
  Color(
    lerp(x.r, y.r, t),
    lerp(x.g, y.g, t),
    lerp(x.b, y.b, t))

fun gammaEncode(Color c)
  Color(
    pow(c.r, 1.0 / 2.2),
    pow(c.g, 1.0 / 2.2),
    pow(c.b, 1.0 / 2.2)
  )

// -- Tests

assert(
  red().string() == "(1,0,0)" &&
  white().string() == "(1,1,1)")
