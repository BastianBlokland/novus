name: release

on: [push]

jobs:
  release:
    name: ${{matrix.config.image}}-${{matrix.config.arch}}-${{matrix.config.compiler}}-release
    runs-on: ${{matrix.config.image}}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            image: ubuntu-16.04,
            arch: x86_64,
            os: ubuntu,
            compiler: gcc7,
            cc: gcc-7,
            cxx: g++-7
          }
        - {
            image: ubuntu-16.04,
            arch: x86_64,
            os: ubuntu,
            compiler: clang9,
            cc: clang-9,
            cxx: clang++-9
          }
        - {
            image: macos-10.15,
            arch: x86_64,
            os: macos,
            compiler: appleclang,
            cc: clang,
            cxx: clang++
          }
        - {
            image: windows-2019,
            arch: x86_64,
            os: windows,
            compiler: mingw-w64-7,
            generator: MinGW
          }
        - {
            image: windows-2019,
            arch: x86_64,
            os: windows,
            compiler: vs2019,
            generator: vs2019
          }
    env:
      CC: ${{matrix.config.cc}}
      CXX: ${{matrix.config.cxx}}
    steps:
    - uses: actions/checkout@v1

    - name: install-windows-mingw
      if: matrix.config.os == 'windows' && matrix.config.generator == 'MinGW'
      run: |
        echo "Installing mingw-w64-7"
        choco install mingw --version=7.3.0 --force
        echo "g++.exe --version:"; g++.exe --version

    - name: configure-unix
      if: matrix.config.os != 'windows'
      run: ./scripts/configure.sh --type Release --tests

    - name: configure-windows
      if: matrix.config.os == 'windows'
      run: pwsh .\scripts\configure.ps1 -Gen ${{matrix.config.generator}} -Type Release -Tests

    - name: build-unix
      if: matrix.config.os != 'windows'
      run: ./scripts/build.sh

    - name: build-windows
      if: matrix.config.os == 'windows'
      run: pwsh .\scripts\build.ps1

    - name: test-unix
      if: matrix.config.os != 'windows'
      run: ./scripts/test.sh

    - name: test-windows
      if: matrix.config.os == 'windows'
      run: pwsh .\scripts\test.ps1

    - name: archive
      uses: actions/upload-artifact@v1
      with:
        name: ${{matrix.config.image}}-${{matrix.config.arch}}-${{matrix.config.compiler}}
        path: bin
