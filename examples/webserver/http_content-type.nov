import "std.nov"

// -- Types

enum HttpContentType =
  Binary,
  TextPlain,
  TextPlainUtf8,
  TextCss,
  TextHtml,
  TextJavascript,
  TextJson,
  ImageAPng,
  ImageBmp,
  ImageGif,
  ImageIco,
  ImageJpeg,
  ImagePng,
  ImageSvg,
  ImageTiff,
  ImageWebP

// -- Conversions

fun string(HttpContentType t)
  if t == HttpContentType.Binary          -> "application/octet-stream"
  if t == HttpContentType.TextPlain       -> "text/plain"
  if t == HttpContentType.TextPlainUtf8   -> "text/plain; charset=utf-8"
  if t == HttpContentType.TextCss         -> "text/css"
  if t == HttpContentType.TextHtml        -> "text/html"
  if t == HttpContentType.TextJavascript  -> "text/javascript"
  if t == HttpContentType.TextJson        -> "application/json"
  if t == HttpContentType.ImageAPng       -> "image/apng"
  if t == HttpContentType.ImageBmp        -> "image/bmp"
  if t == HttpContentType.ImageGif        -> "image/gif"
  if t == HttpContentType.ImageIco        -> "image/x-icon"
  if t == HttpContentType.ImageJpeg       -> "image/jpeg"
  if t == HttpContentType.ImagePng        -> "image/png"
  if t == HttpContentType.ImageSvg        -> "image/svg+xml"
  if t == HttpContentType.ImageTiff       -> "image/tiff"
  if t == HttpContentType.ImageWebP       -> "image/webp"
  else                                    -> ""

// -- Functions

fun findHttpContentType(Path path)
  findHttpContentType(path.extension() ?? "bin")

fun findHttpContentType(string extension)
  if extension == "txt"    -> HttpContentType.TextPlain
  if extension == "css"    -> HttpContentType.TextCss
  if extension == "html"   -> HttpContentType.TextHtml
  if extension == "htm"    -> HttpContentType.TextHtml
  if extension == "js"     -> HttpContentType.TextJavascript
  if extension == "json"   -> HttpContentType.TextJson
  if extension == "apng"   -> HttpContentType.ImageAPng
  if extension == "bmp"    -> HttpContentType.ImageBmp
  if extension == "gif"    -> HttpContentType.ImageGif
  if extension == "ico"    -> HttpContentType.ImageIco
  if extension == "cur"    -> HttpContentType.ImageIco
  if extension == "jpg"    -> HttpContentType.ImageJpeg
  if extension == "jpeg"   -> HttpContentType.ImageJpeg
  if extension == "jfif"   -> HttpContentType.ImageJpeg
  if extension == "pjpeg"  -> HttpContentType.ImageJpeg
  if extension == "pjp"    -> HttpContentType.ImageJpeg
  if extension == "png"    -> HttpContentType.ImagePng
  if extension == "svg"    -> HttpContentType.ImageSvg
  if extension == "tif"    -> HttpContentType.ImageTiff
  if extension == "tiff"   -> HttpContentType.ImageTiff
  if extension == "webp"   -> HttpContentType.ImageWebP
  else                     -> HttpContentType.Binary

fun isText(HttpContentType t)
  t == HttpContentType.TextPlain      ||
  t == HttpContentType.TextPlainUtf8  ||
  t == HttpContentType.TextCss        ||
  t == HttpContentType.TextHtml       ||
  t == HttpContentType.TextJavascript ||
  t == HttpContentType.TextJson
