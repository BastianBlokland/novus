// --- Commandline app that prints the current time in a pretty format.
// When running interactivly it keeps printing until interupt.

import "std.ns"

act printTimeLoop(Console con, Writer{DateTime} timeWriter, Duration interval)
  con.writeOut(ttyLitCursorShowWriter(false));
  invoke(impure lambda () -> None
    con.writeOut(ttyResetLineWriter() & timeWriter, timeNow());
    sleep(interval);
    self()
  )

act cleanup()
  con = consoleOpen().failOnError();
  if con.isTerm() -> con.writeOut(ttyLitCursorShowWriter(true))
  else            -> None()

act printTimeOnce(Console con, Writer{DateTime} timeWriter)
  con.writeOut(timeWriter & litWriter('\n'), timeNow())

struct ClockSettings =
  bool      millies,
  Duration  interval

fun cliDefaults(Type{ClockSettings} t)
  CliDefault("interval", "100ms") :: List{CliDefault}()

fun cliCleanupAction(Type{ClockSettings} t) cleanup

cli(impure lambda (ClockSettings s)
  con = consoleOpen().failOnError();
  timeWriter = dateTimePrettyWriter(s.millies);
  if con.isTerm() -> printTimeLoop(con, timeWriter, s.interval)
  else            -> printTimeOnce(con, timeWriter)
)
