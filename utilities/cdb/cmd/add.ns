import "std.ns"

import "../database.ns"
import "../utils.ns"
import "../writer.ns"

struct AddSettings =
  CliPositional{string}               key,
  CliPositional{Option{Path}}         path,
  CliPositional{Option{List{string}}} args

act addToDb(Database db, string key, Cmd cmd) -> Either{Database, Error}
  if db[key] is Entry -> Error("Key '" + key + "' already exists")
  else                -> db.addEntry(Entry(key, cmd, timeNow(), timeNow()))

act addCmd(AddSettings s) -> Option{Error}
  c         = consoleOpen().failOnError();
  cmdOrErr  = buildCmd(s.path.val ?? pathCurrent(), s.args.val ?? List{string}());
  if cmdOrErr as Error cmdErr -> cmdErr
  if cmdOrErr as Cmd   cmd    ->
    key      = s.key.val;
    if transaction(addToDb[cmd][key], TransactionFlags.Backup) as Error transErr -> transErr
    else ->
      writer   = litWriter("Added '") & stringWriter() & litWriter("': ") & cmdWriter() & newlineWriter();
      c.writeOut(writer, Tuple(key, cmd))

fun cliIsInteruptable(Type{AddSettings} s) false
