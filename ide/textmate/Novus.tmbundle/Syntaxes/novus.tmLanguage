<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>nov</string>
	</array>
	<key>name</key>
	<string>novus</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#import</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type_declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function_declaration</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#code</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>buildin_type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(int|long|float|bool|string|char|function|action|future)\b</string>
					<key>name</key>
					<string>keyword.other.buildin.novus</string>
				</dict>
			</array>
		</dict>
		<key>code</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#lambda_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function_calls</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#buildin_type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_args</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>//</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.novus</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.novus</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(true|false)\b</string>
					<key>name</key>
					<string>constant.language.novus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[0-9_]*\.[0-9_]+\b</string>
					<key>name</key>
					<string>constant.numeric.float.novus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(([0-9_]+)|(0(x|X)[0-9a-fA-F_]+)|(0(b|B)[01_]*))\b</string>
					<key>name</key>
					<string>constant.numeric.int.novus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(([0-9_]+(l|L))|(0(x|X)[0-9a-fA-F_]*(l|L))|(0(b|B)[01_]*(l|L)))\b</string>
					<key>name</key>
					<string>constant.numeric.long.novus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>'\\?.'</string>
					<key>name</key>
					<string>constant.character.novus</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.novus</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.novus</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.novus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.novus</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function_calls</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(fork)?\s*([a-zA-Z0-9_]+)\s*(?=(\{[a-zA-Z0-9_, ]+\})?\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.fork.novus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.novus</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.function.call.novus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function_declaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(fun|act)\s+(.+?)\s*(?=\{|\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.function.novus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.novus</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.function.declaration.novus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic_args</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#buildin_type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>generic_args</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.novus</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.novus</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.generic_args.novus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic_args</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#buildin_type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>import</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^(import)\s+"</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.novus</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>meta.import.novus</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\b(if|else)\b)|(\?(?!\?))|(\:(?!\:))</string>
					<key>name</key>
					<string>keyword.control.novus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((\b(is|as)\b)|(\+\+)|(\-\-)|(\&amp;\&amp;)|(\|\|)|(\&lt;\&lt;)|(\&gt;\&gt;)|(\&lt;\=)|(\&gt;\=)|(\=\=)|(\!\=)|(\:\:)|(\?\?)|\+|\-|\*|(\/(?!\/))|\^|\~|\%|\&amp;|\!|\&lt;|\&gt;)</string>
					<key>name</key>
					<string>keyword.operator.novus</string>
				</dict>
			</array>
		</dict>
		<key>lambda_declaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\s*\b(impure\s+)?(lambda)\s+\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.impure.novus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.lambda.novus</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.lambda.declaration.novus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic_args</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#buildin_type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type_declaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(struct|union|enum)\s+(.\w*)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.type.novus</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.novus</string>
						</dict>
					</dict>
					<key>end</key>
					<string>=|$</string>
					<key>name</key>
					<string>meta.type.declaration.novus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic_args</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#buildin_type</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.nov</string>
	<key>uuid</key>
	<string>4E3F51D5-1E08-48C3-9CA3-84769D3E9EAC</string>
</dict>
</plist>
